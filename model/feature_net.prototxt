name: "VGG_ILSVRC_16_layers"
force_backward: true
input: "data"
input_dim: 1
input_dim: 3
input_dim: 361 #368 # 380
input_dim: 361 #368 # 380

layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
###################################################################################################


layer {
  bottom: "pool3"
  top: "conva_1_3"
  name: "conva_1_3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 10
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 10
    pad: 0
  #  mask: true
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 1e-2 #1e-7
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer{ 
  bottom: "conva_1_3"
  top: "conva_1_3"
  name: "relua_1_3"
  type: "ReLU"
  relu_param {
   negative_slope: 0.3
  }
}

layer {
  bottom: "conv4_3"
  top: "conva_1_4"
  name: "conva_1_4"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 10
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 10
    pad: 0
  #  mask: true
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 1e-2 #1e-7
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer{ 
  bottom: "conva_1_4"
  top: "conva_1_4"
  name: "relua_1_4"
  type: "ReLU"
  relu_param {
   negative_slope: 0.3
  }
}
layer {
  bottom: "conv5_3"
  top: "conva_1_5_down"
  name: "conva_1_5_down"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 10
  }
  param {
    lr_mult: 2e6
    decay_mult: 0
  }
  convolution_param {
    num_output: 10
    pad: 0
  #  mask: true
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 1e-2 #1e-7
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  bottom: "conva_1_5_down"
  top: "conva_1_5"
  name: "conva_1_5"
  type: "Deconvolution"
  param {
    lr_mult: 1
    decay_mult: 0.01
  }
  #param {
  #  lr_mult: 2
  #  decay_mult: 0
  #}
  convolution_param {
    num_output: 10
    group: 10
    pad: 1
    stride: 2
    kernel_size: 4
    weight_filler {
      #type: "gaussian"
      #std: 1e-3
        type: "constant"
        value: 0.01
    }
    bias_term: false
    #bias_filler {
    #  type: "constant"
    #  value: 0
    #}
  }
}

layer{ 
  bottom: "conva_1_5"
  top: "conva_1_5"
  name: "relua_1_5"
  type: "ReLU"
  relu_param {
   negative_slope: 0.3
  }
}

layer {
    bottom: "conva_1_3"
    bottom: "conva_1_4"
    bottom: "conva_1_5"
    top: "conva_1"
    name: "conva_1"
    type: "Concat"
    concat_param {
        axis: 1
    }
}
layer {
    bottom: "conva_1"
    top: "conva_1_norm"
    name: "mvna_1"
    type: "MVN"
}

layer {
  bottom: "conva_1_norm"
  top: "conva_2"
  name: "conva_2"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 0.01
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 10
    pad: 2
  #  mask: true
    kernel_size: 5
    weight_filler {
      type: "gaussian"
      std: 1e-2 #1e-7
    }
    bias_filler {
      type: "constant"
      value: 0.
    }
  }
}
layer{ 
  bottom: "conva_2"
  top: "conva_2"
  name: "relua_2"
  type: "ReLU"
  relu_param {
   negative_slope: 0.3
  }
}

layer {
  bottom: "conva_2"
  top: "conva_3"
  name: "conva_3"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 0.01
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
   # group: 100
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "gaussian"
      std: 1e-2
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

#layer {
#  bottom: "conva_2"
#  top: "conva_3"
#  name: "conva_3"
#  type: "Deconvolution"
#  param {
#    lr_mult: 100
#    decay_mult: 5
#  }
#  param {
#    lr_mult: 200
#    decay_mult: 0
#  }
#  convolution_param {
#    num_output: 1
#   # group: 100
#    pad: 2
#    stride: 2
#    kernel_size: 6
#    weight_filler {
#      type: "gaussian"
#      std: 1e-7
#    }
#    bias_filler {
#      type: "constant"
#      value: 0
#    }
#  }
#}
#layer{ 
#  bottom: "conva_1"
#  top: "conva_1"
#  name: "dropa_1"
#  type: "Dropout"
#  dropout_param {
#   dropout_ratio: 0.5
#  }
#}
